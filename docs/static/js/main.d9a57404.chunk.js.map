{"version":3,"sources":["components/Form.js","components/Calendar.js","App.js","index.js"],"names":["Form","props","handleChange","handleSave","handleCancel","mood","repeated","react_default","a","createElement","Fragment","className","htmlFor","type","name","onChange","value","checked","placeholder","react_router_dom","concat","onClick","e","preventDefault","to","Calendar","moodList","savedMood","length","sort","b","Date","dateSaved","map","item","index","key","title","messageSaved","moodSaved","App","_useState","useState","date","message","_useState2","Object","slicedToArray","state","setState","_useState3","_useState4","setRepeated","useEffect","localMood","getLocalStorage","prevState","objectSpread","localStorage","setItem","JSON","stringify","event","currentTarget","valueDate","isRepeated","findIndex","checkRepeat","defineProperty","parse","getItem","toConsumableArray","react_router","exact","path","render","src_components_Calendar","src_components_Form","ReactDOM","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d9a57404.chunk.js","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Form.css';\n\nconst Form = props => {\n  const {handleChange, handleSave, handleCancel, mood, repeated} = props;\n  return (\n    <React.Fragment>\n      <small className=\"form__container--title\">Edit</small>\n      <div className=\"section__container\">\n        <div className=\"form__container--date\">\n          <h2 className=\"form__title\">Date</h2>\n          <label className=\"form__label\" htmlFor=\"date\">Date</label>\n          <input\n            type=\"date\"\n            name=\"date\"\n            className=\"form__input\"\n            onChange={handleChange}\n          />\n        </div>\n        {repeated\n          ? <p className=\"error__message\">\n              You already set this date. Please try with another!\n            </p>\n          : ''}\n        <div className=\"form__container--mood\">\n          <h2 className=\"form__title\">Mood</h2>\n          <label className=\"form__label\" htmlFor=\"mood\">\n            <input\n              type=\"radio\"\n              name=\"mood\"\n              value=\":)\"\n              className=\"form__radio happy__input\"\n              onChange={handleChange}\n              checked={mood === ':)' ? true : false}\n            />\n            {':)'}\n          </label>\n          <label className=\"form__label\" htmlFor=\"mood\">\n            <input\n              type=\"radio\"\n              name=\"mood\"\n              value=\":(\"\n              className=\"form__radio sad__input\"\n              onChange={handleChange}\n              checked={mood === ':(' ? true : false}\n            />\n            {':('}\n          </label>\n        </div>\n        {mood === ':)'\n          ? <div className=\"form__container--message\">\n              <h2 className=\"form__title\">Message</h2>\n              <label className=\"form__label\" htmlFor=\"text\">Message</label>\n              <input\n                type=\"text\"\n                name=\"message\"\n                className=\"form__input\"\n                placeholder=\"Why it whas a good day?\"\n                onChange={handleChange}\n              />\n            </div>\n          : ''}\n        <div className=\"form__container--button\">\n          <Link\n            className={`form__button form__save--button ${repeated ? 'disabled__button' : ''}`}\n            onClick={repeated ? e => e.preventDefault (e) : handleSave}\n            to=\"/\"\n          >\n            Save\n          </Link>\n          <Link\n            to=\"/\"\n            className=\"form__button form__cancel--button\"\n            onClick={handleCancel}\n          >\n            Cancel\n          </Link>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nForm.propTypes = {\n  handleChange: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  mood: PropTypes.string.isRequired,\n  repeated: PropTypes.bool.isRequired \n};\n\nexport default Form;\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport './Calendar.css';\n\nconst Calendar = props => {\n  let moodList;\n  const {savedMood} = props;\n  if (savedMood.length > 0) {\n    moodList = props.savedMood\n      .sort ((a, b) => {\n        return new Date (a.dateSaved) - new Date (b.dateSaved);\n      })\n      .map ((item, index) => {\n        return (\n          <li\n            className=\"mood__item\"\n            key={`mood-${index}`}\n            title={`Date: ${item.dateSaved} ${item.messageSaved}`}\n          >\n            <div\n              className={`mood__face ${item.moodSaved === ':)' ? 'happy__face' : 'sad__face'}`}\n            >\n              {item.moodSaved}\n            </div>\n          </li>\n        );\n      });\n  }\n  return (\n    <React.Fragment>\n      <small className=\"form__container--title\">Calendar</small>\n      <div className=\"section__container\">\n        <div className=\"calendar__button--container\">\n          <Link className=\"calendar__button\" to=\"/edit\">+</Link>\n        </div>\n        <div className=\"calendar__list--container\">\n          {moodList\n            ? <ul className=\"calendar__list\">\n                {moodList}\n              </ul>\n            : <p className=\"calendar__no-faces\">{`Add a mood to start :)!`}</p>}\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nCalendar.propTypes = {\n  savedMood: PropTypes.array.isRequired,\n};\n\nexport default Calendar;\n","import React, {useEffect, useState} from 'react';\nimport Form from './components/Form';\nimport Calendar from './components/Calendar';\nimport {Route, Switch} from 'react-router-dom';\nimport './App.css';\n\nconst App = () => {\n  const [state, setState] = useState ({\n    savedMood: [],\n    date: '',\n    mood: ':)',\n    message: '',\n  });\n  const [repeated, setRepeated] = useState (false);\n\n  useEffect (() => {\n    const localMood = getLocalStorage ();\n    if (localMood !== null) {\n      setState (prevState => ({\n        ...prevState,\n        savedMood: localMood,\n      }));\n    }\n  }, []);\n\n  useEffect (\n    () => {\n      if (state.savedMood !== null) {\n        localStorage.setItem ('mood', JSON.stringify (state.savedMood));\n      }\n    },\n    [state.savedMood]\n  );\n\n  const checkRepeat = valueDate => {\n    const isRepeated = state.savedMood.findIndex (\n      item => item.dateSaved === valueDate\n    );\n    if (isRepeated !== -1) {\n      setRepeated (true);\n    } else {\n      setRepeated (false);\n    }\n  };\n\n  const handleChange = event => {\n    const key = event.currentTarget.name;\n    const value = event.currentTarget.value;\n    checkRepeat (value);\n    setState (prevState => ({\n      ...prevState,\n      [key]: value,\n    }));\n  };\n\n  const getLocalStorage = () => JSON.parse (localStorage.getItem ('mood'));\n\n  const handleSave = () => {\n    if (!repeated) {\n      setState (prevState => ({\n        savedMood: [\n          ...prevState.savedMood,\n          {\n            dateSaved: prevState.date,\n            moodSaved: prevState.mood,\n            messageSaved: prevState.message,\n          },\n        ],\n        date: '',\n        mood: ':)',\n        message: '',\n      }));\n    }\n  };\n\n  const handleCancel = () => {\n    setState (prevState => ({\n      ...prevState,\n      date: '',\n      mood: ':)',\n      message: '',\n    }));\n    setRepeated (false);\n  };\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => <Calendar savedMood={state.savedMood} />}\n        />\n        <Route\n          path=\"/edit\"\n          render={() => (\n            <Form\n              handleChange={handleChange}\n              handleSave={handleSave}\n              handleCancel={handleCancel}\n              mood={state.mood}\n              repeated={repeated}\n            />\n          )}\n        />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {HashRouter} from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render (\n  <HashRouter><App /></HashRouter>,\n  document.getElementById ('root')\n);\n"],"sourceRoot":""}